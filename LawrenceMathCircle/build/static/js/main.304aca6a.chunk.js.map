{"version":3,"sources":["reportWebVitals.js","Navbar.jsx","App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","a11yProps","index","id","Navbar","defValue","React","useState","value","setValue","Tabs","variant","onChange","event","newValue","aria-label","Tab","label","href","pageValues","App","src","alt","window","location","split","reverse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,gCCDd,SAASQ,EAAUC,GACf,MAAO,CACHC,GAAG,WAAD,OAAaD,GACf,gBAAgB,gBAAhB,OAAiCA,IAIlC,IAAME,EAAS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACRC,IAAMC,SAASF,GAAsB,GAD7B,mBAC3BG,EAD2B,KACpBC,EADoB,KAOlC,OACI,eAACC,EAAA,EAAD,CACIC,QAAQ,YACRH,MAAOA,EACPI,SARa,SAACC,EAAOC,GACzBL,EAASK,IAQLC,aAAW,WAJf,UAMI,cAACC,EAAA,EAAD,aAAKC,MAAM,OAAOC,KAAK,SAAYjB,EAAU,KAC7C,cAACe,EAAA,EAAD,aAAKC,MAAM,WAAWC,KAAK,aAAgBjB,EAAU,KACrD,cAACe,EAAA,EAAD,aAAKC,MAAM,WAAWC,KAAK,aAAgBjB,EAAU,KACrD,cAACe,EAAA,EAAD,aAAKC,MAAM,UAAUC,KAAK,YAAejB,EAAU,SC3BzDkB,EAAa,CACf,KAAQ,EACR,SAAY,EACZ,WAAY,EACZ,QAAW,GAQFC,EAAM,WACf,OACI,qCACI,qBAAKjB,GAAG,OAAOkB,IAAI,aAAaC,IAAI,wBACpC,cAAC,EAAD,CAAQjB,SARTc,EAAYI,OAAOC,SAASN,KAAKO,MAAM,KAAKC,UAAU,UCLjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BvC,M","file":"static/js/main.304aca6a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Modified from https://material-ui.com/components/tabs/#nav-tabs\r\n\r\nimport React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `nav-tab-${index}`,\r\n        'aria-controls': `nav-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport const Navbar = ({defValue}) => {\r\n    const [value, setValue] = React.useState(defValue ? defValue : 0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Tabs\r\n            variant=\"fullWidth\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"nav tabs\"\r\n        >\r\n            <Tab label=\"Home\" href=\"/home\" {...a11yProps(0)} />\r\n            <Tab label=\"Calendar\" href=\"/calendar\" {...a11yProps(1)} />\r\n            <Tab label=\"About Us\" href=\"/about-us\" {...a11yProps(2)} />\r\n            <Tab label=\"Contact\" href=\"/contact\" {...a11yProps(3)} />\r\n        </Tabs>\r\n    );\r\n}\r\n","import React from \"react\"\r\nimport { Navbar } from \"./components\"\r\n\r\nconst pageValues = {\r\n    \"home\": 0,\r\n    \"calendar\": 1,\r\n    \"about-us\": 2,\r\n    \"contact\": 3\r\n}\r\n\r\nconst hrefToKey = () => {\r\n    return pageValues[(window.location.href.split(\"/\").reverse()[0])];\r\n}\r\n\r\n\r\nexport const App = () => {\r\n    return (\r\n        <>\r\n            <img id=\"logo\" src=\"./logo.png\" alt=\"Cannot Be Displayed\"/>\r\n            <Navbar defValue={hrefToKey()} />\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { App } from \"./components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}